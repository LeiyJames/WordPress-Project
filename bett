I'm building a salon website with a complete sales funnel using React.js and Tailwind CSS. The website should have the following structure and features:

1. **Project Setup**:
- Create a React.js project with Vite
- Install Tailwind CSS for styling
- Set up React Router for page navigation
- Install react-hook-form for form handling
- Add react-datepicker for appointment scheduling

2. **Page Structure**:
- Home/Hero page with CTA button
- Services listing page
- Stylists profile page
- Multi-step appointment booking flow
- Thank you page

3. **Core Components**:
- Header with logo and navigation
- Footer with contact info and social links
- Service cards with images, descriptions, and prices
- Stylist profile cards with specialties
- Booking progress indicator
- Responsive design for all screen sizes

4. **Booking Funnel Flow**:
1. Service selection (show categories and popular services)
2. Stylist selection (recommend based on service)
3. Date/time selection (using react-datepicker)
4. Customer information form (with validation)
5. Booking review and confirmation
6. Thank you page with booking summary

5. **Technical Requirements**:
- Use React Context API to manage booking state
- Implement form validation with react-hook-form
- Create reusable UI components (buttons, cards, etc.)
- Add smooth transitions between steps
- Ensure full mobile responsiveness

6. **Additional Features**:
- Add loading states for better UX
- Implement local storage to save booking progress
- Include success/error notifications
- Add a "back" button in the booking flow
- Include a cancellation policy notice

Please generate:
1. The initial project setup commands
2. Key components with Tailwind CSS styling
3. The booking context to manage state
4. The multi-step booking flow implementation
5. Sample data for services and stylists


Now that we have the structure, please help me implement:

1. The BookingContext with state management for the appointment flow
2. The ServiceSelection component with service cards and selection logic
3. The DateTimeSelection component with react-datepicker integration
4. The form validation for customer information
5. The responsive design for the booking progress indicator

Use modern React patterns and clean Tailwind CSS classes. Include comments explaining key parts of the implementation.


Please include all previous requirements and add these new features:

1. **Before/After Gallery**:
- Create a dedicated gallery page or section
- Implement an interactive slider/carousel showing transformations
- Each item should show:
  - Before image (left)
  - After image (right)
  - Service performed
  - Stylist name
  - Client testimonial (optional)
- Add filtering by service type (haircuts, coloring, treatments)
- Use react-image-comparison-slider or similar package

2. **Client Reviews**:
- Create a reviews component showing:
  - Client photo/avatar
  - Star rating (1-5)
  - Review text
  - Date of service
  - Service received
- Implement both:
  - A reviews section on the homepage (3-5 featured reviews)
  - A dedicated reviews page with all testimonials
- Add review submission form for new clients
- Include sorting options (newest, highest rated)


Please generate:
1. The BeforeAfterSlider component with interactive comparison
2. The ReviewCard component with star rating display
3. The GalleryFilter component for service type filtering
4. The ReviewForm component with validation
5. Integration of these components into the existing layout



For the implementation, please:

1. Use Framer Motion for smooth gallery transitions
2. Implement the star rating system using react-icons
3. Add proper image lazy loading for gallery items
4. Create mobile-responsive layouts for both new features
5. Include state management for review submissions
6. Add share buttons for gallery transformations
7. Implement automatic review sorting based on selected option
8. Add skeleton loaders for gallery images

For the before/after slider, ensure:
- Mobile touch support
- Drag handle with custom styling
- Percentage labels option
- Keyboard accessibility
